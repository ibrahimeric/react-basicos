{"version":3,"sources":["Components/Signup.jsx"],"names":["Signup","_useState","useState","_useState2","_slicedToArray","incorrect","setIncorrect","strengthLabels","_useState3","_useState4","strength","setStrength","getStrength","password","strengthIndicator","lower","upper","numbers","i","length","char","charCodeAt","_useState5","username","_useState6","body","setBody","inputChange","_ref","target","name","value","_objectSpread","_defineProperty","React","createElement","className","action","type","id","onChange","placeholder","spellCheck","evt","changePassword","concat","Fragment","onClick","axios","post","then","_ref2","data","toString","localStorage","setItem","token","catch"],"mappings":"oLAgIeA,UA1HA,WAAM,IAAAC,EACeC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAExBI,EAAiB,CAAC,QAAS,UAAW,UAC5CC,EACgCN,mBAAS,IAAGO,EAAAL,YAAAI,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,EAAc,SAACC,GAOnB,IALA,IAAIC,GAAqB,EACzBC,GAAQ,EACRC,GAAQ,EACRC,GAAU,EAEDC,EAAI,EAAGA,EAAIL,EAASM,OAAQD,IAAI,CAEvC,IAAME,EAAOP,EAASQ,WAAYH,IAE7BF,GAASI,GAAQ,IAAMA,GAAQ,KAElCJ,GAAQ,EACRF,MAGGG,GAAWG,GAAQ,IAAMA,GAAQ,KAEpCH,GAAU,EACVH,MAGGC,GAASK,GAAQ,IAAMA,GAAQ,MAClCL,GAAQ,EACRD,KAIqB,IAAtBA,GAA2BD,EAASM,OAAS,IAC9CL,GAAwC,GACjB,IAAtBA,GAA2BD,EAASM,OAAS,IAC9CL,GAAwC,GAE1CH,EAAYJ,EAAeO,KAS5B,IAAAQ,EAEuBpB,mBAAS,CAACqB,SAAU,GAAIV,SAAU,KAAIW,EAAApB,YAAAkB,EAAA,GAAvDG,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAEdG,EAAc,SAAHC,GAAiB,IAAZC,EAAMD,EAANC,OACpBvB,GAAa,GAAM,IACZwB,EAAeD,EAAfC,KAAMC,EAASF,EAATE,MACbL,EAAOM,YAAA,GACFP,EAAIQ,YAAA,GACNH,EAAOC,MAoBZ,OACEG,IAAAC,cAAA,OAAKC,UAAU,UACXF,IAAAC,cAAA,OAAKC,UAAU,mBACXF,IAAAC,cAAA,OAAKC,UAAU,QACfF,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAAA,QAAME,OAAO,IACXH,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAAA,SACAG,KAAK,OACLC,GAAG,WACHT,KAAK,WAELU,SAAUb,EACVc,YAAY,YAEZP,IAAAC,cAAA,UAAI,kBAEJD,IAAAC,cAAA,SACAL,KAAK,WACLY,WAAW,QACXJ,KAAK,WAELG,YAAY,gBAEZD,SAAU,SAAAG,GAAG,OAxDzB,SAAwBA,GACtB/B,EAAY+B,EAAId,OAAOE,OACvBJ,EAAYgB,GAsDeC,CAAeD,MAGhCT,IAAAC,cAAA,OAAKC,UAAS,QAAAS,OAAUnC,IACtBwB,IAAAC,cAAA,aAGFD,IAAAC,cAAA,OAAKC,UAAU,YAAY1B,GAAWwB,IAAAC,cAAAD,IAAAY,SAAA,KAAE,iBAAYpC,IACpDwB,IAAAC,cAAA,OAAKC,UAAS,kBAAAS,OAAoBxC,EAAW,uBAAwB,KAAM,sCAC3E6B,IAAAC,cAAA,SACAG,KAAK,SACLP,MAAM,oBACNgB,QApDG,WACbC,IAAMC,KAAK,kCAAmCxB,GAC7CyB,KAAK,SAAAC,GAAY,IAAVC,EAAID,EAAJC,KACN,GAAuB,UAApBA,EAAKC,WAGN,OAFA/C,GAAa,QACbgD,aAAaC,QAAQ,QAAS,IAGhCD,aAAaC,QAAQ,QAASH,EAAKI,SAEpCC,MAAM,WACLnD,GAAa,GACbgD,aAAaC,QAAQ,QAAS","file":"static/js/11.88cc91f3.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../Styles/Signup.css'\r\n// Importamos el Hook useState\r\nimport { useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst Signup = () => {\r\n  const [incorrect, setIncorrect] = useState(false);\r\n  /* Declaramos la constante strengthLabels para indicar la seguridad de una contraseña */\r\n  const strengthLabels = ['debil', 'mediana', 'fuerte']\r\n  /* Declaramos la constante strength a la cual le asignamos un valor nulo*/\r\n  const [strength, setStrength] = useState(\"\");\r\n\r\n  const getStrength = (password) => {\r\n    /* Declaramos la variable strengthIndicator y le asignamos el valor -1 y las variables lower, upper y numbers a las cuales le asignamos el valor false */\r\n    let strengthIndicator = -1,\r\n    lower = false,\r\n    upper = false,\r\n    numbers = false;\r\n    /* Con este for recorremos una por una todas las letras de la contraseña ingresada por el usuario. */\r\n    for (let i = 0; i < password.length; i++){\r\n      /* Declaramos la constante char en la que vamos a almacenar el valor unicode de las letras una a la vez. */\r\n      const char = password.charCodeAt (i);\r\n      /* En este if comprobamos si la variable upper es false y si el valor unicode almacenado en char corresponde a una letra mayuscula. */\r\n      if (!upper && char >= 65 && char <= 90) {\r\n        /* En este if verificamos la longitud de la contraseña es mayor a 4 o si el valor almacenado en strengthIndicator es igual a -1 lo que significa que todavia no se indicó la seguridad de la contraseña. En caso de cumplirse una de estas condiciones se incrementa en 1 el valor de la variable strengthIndicator */\r\n        upper = true;\r\n        strengthIndicator++;\r\n      }\r\n      /* En este if comprobamos si la variable numbers es false y si el valor unicode almacenado en char corresponde a un numero. */\r\n      if (!numbers && char >= 48 && char <= 57) {\r\n        /* En este if verificamos la longitud de la contraseña es mayor a 7 o si el valor almacenado en strengthIndicator es igual a -1 lo que significa que todavia no se indicó la seguridad de la contraseña. En caso de cumplirse una de estas condiciones se incrementa en 1 el valor de la variable strengthIndicator */\r\n        numbers = true;\r\n        strengthIndicator++;\r\n      }\r\n      /* En este if comprobamos si la variable lower es false y si el valor unicode almacenado en char corresponde a una letra minuscula. */\r\n      if (!lower && char >= 97 && char <= 122) {\r\n        lower = true;\r\n        strengthIndicator++;\r\n      }\r\n    }\r\n    /* Asignamos a la constante strength el nivel de seguridad de la contraseña dependiendo del valor de strengthIndicator. */\r\n    if(strengthIndicator === 2 && password.length < 8)\r\n      strengthIndicator = strengthIndicator - 1;\r\n    if(strengthIndicator === 1 && password.length < 5)\r\n      strengthIndicator = strengthIndicator - 1;\r\n    \r\n    setStrength(strengthLabels[strengthIndicator]);\r\n  };\r\n\r\n\r\n\r\n\r\n  function changePassword(evt){\r\n    getStrength(evt.target.value)\r\n    inputChange(evt)\r\n  }\r\n\r\n  const [body, setBody] = useState({username: '', password: ''});\r\n  \r\n  const inputChange = ({target}) => {\r\n    setIncorrect(false)\r\n    const {name, value} = target\r\n    setBody({\r\n      ...body,\r\n      [name]: value\r\n    })\r\n  }\r\n  \r\n  const onSubmit=()=>{\r\n    axios.post('http://localhost:5000/api/login', body)\r\n    .then(({data}) => {\r\n      if(data.toString() === 'false'){\r\n        setIncorrect(true)\r\n        localStorage.setItem('token', '')\r\n        return\r\n      }\r\n      localStorage.setItem('token', data.token)\r\n    })\r\n    .catch(() => {\r\n      setIncorrect(true)\r\n      localStorage.setItem('token', '')\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='signUp'>\r\n        <div className=\"containerSignUp\">\r\n            <div className=\"img\"/>\r\n            <h3>Inicio de sesión</h3>\r\n            <form action=\"\">\r\n              <h6>Usuario:</h6>\r\n              <input \r\n              type=\"text\"  \r\n              id=\"username\" \r\n              name=\"username\" \r\n              // value={loginData.username}\r\n              onChange={inputChange}\r\n              placeholder=\"Usuario\"/>\r\n\r\n              <h6>Contraseña:</h6>\r\n              {/* Con el evento onChange llamamos a la constante getStrength cada vez que se realiza un cambio en el contenido del input */}\r\n              <input \r\n              name=\"password\" \r\n              spellCheck=\"false\"\r\n              type=\"password\" \r\n              // value={loginData.password}\r\n              placeholder=\"Contraseña\"\r\n              // onChange={evt => changePassword(evt)}\r\n              onChange={evt => changePassword(evt)}/>\r\n\r\n              {/* Asignamos una clase con el nombre almacenado en la constante strength */}\r\n              <div className={`bars ${strength}`}>\r\n                <div></div>\r\n              </div>\r\n              {/* Indicamos la seguridad de la contraseña mostrando la palabra contraseña seguido del valor de la variable strength */}\r\n              <div className=\"strength\">{strength &&<>Contraseña {strength}</>}</div>\r\n              <div className={`incorrectLogin ${incorrect? 'activeincorrectLogin': ''}`}>Usuario o contraseña incorrecto</div>\r\n              <input \r\n              type=\"button\" \r\n              value=\"Iniciar sesión\" \r\n              onClick={onSubmit}/>\r\n            </form>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup"],"sourceRoot":""}